{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/utils/supabase.server.ts", "../app/routes/index.tsx", "../app/hooks/useSupabase.ts", "../app/components/Login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    headers: responseHeaders,\n    status: responseStatusCode,\n  });\n}\n", "import type { LinksFunction, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useRevalidator } from\n\"@remix-run/react\";\n\nimport { createBrowserClient } from '@supabase/auth-helpers-remix';\nimport { useEffect, useState } from \"react\";\n\nimport styles from './styles/global.css';\nimport type { Database } from \"./types/database.js\";\nimport { createSupabaseServerClient } from \"./utils/supabase.server.js\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"MiChat\",\n  viewport: \"width=device-width,initial-scale=1\"\n});\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: styles }];\n\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const env = {\n    SUPABASE_URL: process.env.SUPABASE_URL!,\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY!\n  };\n\n  const response = new Response();\n\n  const supabase = createSupabaseServerClient({ request, response });\n\n  const { data: { session } } = await supabase.auth.getSession();\n\n  return json({ env, session }, { headers: response.headers });\n};\n\nexport default function App() {\n  const { env, session: serverSession } = useLoaderData<typeof loader>();\n  const revalidator = useRevalidator();\n\n  const [supabase] = useState(() => createBrowserClient<Database>(\n    env.SUPABASE_URL,\n    env.SUPABASE_ANON_KEY\n  ));\n\n  useEffect(() => {\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {\n      if (session?.access_token !== serverSession?.access_token) {\n        revalidator.revalidate();\n      }\n    });\n\n    return () => subscription?.unsubscribe();\n  }, []);\n\n  return (\n    <html lang=\"es\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet context={{ supabase, name: 'NickName' }} />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { createServerClient } from '@supabase/auth-helpers-remix'\n\nimport type { Database } from '~/types/database'\n\nexport const createSupabaseServerClient = ({ request, response }: {\n  request: Request,\n  response: Response\n}) => createServerClient<Database>(\n  process.env.SUPABASE_URL!,\n  process.env.SUPABASE_ANON_KEY!,\n  { request, response }\n)", "import { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\n\nimport { createSupabaseServerClient } from \"~/utils/supabase.server\";\nimport { Login } from \"~/components/Login\";\n\n// loader de datos en el SERVER\nexport const loader = async ({ request }: LoaderArgs) => {\n  const response = new Response()\n  const supabase = createSupabaseServerClient({ request, response })\n  const { data } = await supabase.from('messages').select()\n  return json({ messages: data ?? [] }, { headers: response.headers })\n}\n\nexport default function Index() {\n  const { messages } = useLoaderData<typeof loader>()\n\n  return (\n    <main>\n      <h1>MiChat</h1>\n      <Login />\n\n      <pre>\n        {JSON.stringify(messages, null, 2)}\n      </pre>\n    </main>\n  );\n}\n", "import { useOutletContext } from \"@remix-run/react\"\nimport { SupabaseClient } from \"@supabase/supabase-js\"\nimport type { Database } from \"~/types/database\"\n\ntype TypedSupabaseClient = SupabaseClient<Database>\n\nexport type SupabaseOutletContext = {\n  supabase: TypedSupabaseClient\n}\n\nexport const useSupabase = () => {\n  const { supabase } = useOutletContext<SupabaseOutletContext>()\n  return supabase\n}", "import { useSupabase } from \"~/hooks/useSupabase\"\n\nexport function Login () {\n  const supabase = useSupabase()\n\n  const handleLogout = async () => {\n    const { error } = await supabase.auth.signOut()\n    if (error) console.log('Error al cerrar sesi\u00F3n', error)\n  }\n\n  const handleLogin = async () => {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'github'\n    })\n\n    if (error) console.log('Error al iniciar sesi\u00F3n', error)\n  }\n\n  return (\n    <div style={{ display: 'flex', gap: '12px' }}>\n      <button onClick={handleLogout}>Cerrar sesi\u00F3n</button>\n      <button onClick={handleLogin}>Iniciar sesi\u00F3n</button>\n    </div>\n  )\n}", "export default {'entry':{'module':'/build/entry.client-IFE65BD2.js','imports':['/build/_shared/chunk-3ONT7DLX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GRA2CB7I.js','imports':['/build/_shared/chunk-2LQQ2YYN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-ICLEIAJF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'52927e49','hmr':undefined,'url':'/build/manifest-52927E49.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\JOAQUIN\\\\Desktop\\\\supabase-proyects\\\\my-remix-app\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":false,\"v2_headers\":false,\"v2_meta\":false,\"v2_normalizeFormMethod\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_auth_helpers_remix", "import_jsx_dev_runtime", "loader", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader"]
}
